#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define COLEMAK  0
#define QT       1
#define SWAP     2
#define MOUSE    3
#define NUM_NAV  4
#define PROG     5
#define POWER    6
#define MODS     7
#define MODS_NAV 8

#define WIN_L LG(LC(LEFT))
#define WIN_R RG(RC(RIGHT))

&mmv {
    acceleration-exponent = <1>;  // 1
    time-to-max-speed-ms = <64>; // 300
    delay-ms = <0>;
    trigger-period-ms = <16>;      // 16
};
&msc {
    acceleration-exponent = <0>;  // 0
    time-to-max-speed-ms = <40>;  // 300
    delay-ms = <0>;
    trigger-period-ms = <16>;      // 16
};

/ {
        macros {
                ctab: ctrl_tab_swap {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <0>;
                        bindings
                                = <&macro_release &kp LCTRL>
                                , <&macro_press &swap>
                                , <&macro_release &swap>
                                ;
                }; 

                lm: lm {
                        compatible = "zmk,behavior-macro-two-param";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <2>;
                        bindings
                                = <&macro_param_1to1>
                                , <&macro_press &mo MACRO_PLACEHOLDER>
                                , <&macro_param_2to1>
                                , <&macro_press &kp MACRO_PLACEHOLDER>
                                , <&macro_pause_for_release>
                                , <&macro_param_2to1>
                                , <&macro_release &kp MACRO_PLACEHOLDER>
                                , <&macro_param_1to1>
                                , <&macro_release &mo MACRO_PLACEHOLDER>
                                ;
                };

                lmm: lmm {
                        compatible = "zmk,behavior-macro-one-param";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <1>;
                        bindings
                                = <&macro_press &mo MODS>
                                , <&macro_param_1to1>
                                , <&macro_press &kp MACRO_PLACEHOLDER>
                                , <&macro_pause_for_release>
                                , <&macro_param_1to1>
                                , <&macro_release &kp MACRO_PLACEHOLDER>
                                , <&macro_release &mo MODS>
                                ;
                };

                lmmn: lmmn {
                        compatible = "zmk,behavior-macro-one-param";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <1>;
                        bindings
                                = <&macro_press &mo MODS_NAV>
                                , <&macro_param_1to1>
                                , <&macro_press &kp MACRO_PLACEHOLDER>
                                , <&macro_pause_for_release>
                                , <&macro_param_1to1>
                                , <&macro_release &kp MACRO_PLACEHOLDER>
                                , <&macro_release &mo MODS_NAV>
                                ;
                };

                stab: shift_tab {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHIFT>
                                , <&macro_press &kp TAB>
                                , <&macro_pause_for_release>
                                , <&macro_release &kp TAB>
                                , <&macro_release &kp LSHIFT>
                                ;
                };

        };
        
        behaviors {
                swap: swapper {
                        compatible = "zmk,behavior-tri-state";
                        #binding-cells = <0>;
                        bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
                };

                ltt: layer_tap_tap_custom {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;    // <---[[moderate duration]]
                        quick-tap-ms = <200>;
                        flavor = "tap-preferred";
                        bindings = <&mo>, <&kp>;
                };
        
                ltc: layer_tap_custom {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;    // <---[[moderate duration]]
                        quick-tap-ms = <200>;
                        flavor = "hold-preferred";
                        bindings = <&mo>, <&kp>;
                };

                lmt: layer_mod_tap {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;    // <---[[moderate duration]]
                        quick-tap-ms = <200>;
                        flavor = "hold-preferred";
                        bindings = <&lmm>, <&kp>;
                };

                lmnt: layer_mod_nav_tap {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;    // <---[[moderate duration]]
                        quick-tap-ms = <200>;
                        flavor = "hold-preferred";
                        bindings = <&lmmn>, <&kp>;
                };

                mtc: mod_tap_custom {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;    // <---[[moderate duration]]
                        quick-tap-ms = <200>;
                        flavor = "hold-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &swa &kp Q        &kp W &kp F    &kp P               &kp B                                            &kp J     &kp L          &kp U     &kp Y   &kp SEMI &kp DEL
   &kp TAB      &kp A        &kp R &kp S    &kp T               &kp G                                            &kp M     &kp N          &kp E     &kp I   &kp O    &kp SQT
   &sk SWAP     &ltt MOUSE Z &kp X &kp C    &kp D               &kp V                                            &kp K     &kp H          &kp COMMA &kp DOT &kp FSLH &sk SWAP
                                   &lm MODS LALT &lmt LCTRL DEL &mtc LSHFT BSPC &ltc PROG TAB   &ltc NUM_NAV ESC &kp SPACE &ltc POWER RET &kp LGUI 
                        >;
                };
        
                qwertly_toggle {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans &kp Q  &kp W &kp E  &kp R  &kp T           &kp Y  &kp U  &kp I     &kp O   &kp O    &kp DEL
   &trans &kp A  &kp S &kp D  &kp F  &kp G           &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &trans &trans &kp C &kp C  &kp V  &kp B           &kp N  &kp M  &kp COMMA &kp DOT &trans   &mo SWAP
                       &trans &trans &trans &trans   &trans &trans &trans    &trans
                        >;
                };

                swap_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans  &kp Q    &kp W   &kp F     &kp P           &kp B                            &kp B  &kp P  &kp F &kp W &kp Q &trans
   &kp SQT &kp O    &kp I   &kp E     &kp N           &kp M                            &kp G  &kp T  &kp S &kp R &kp A &none
   &trans  &kp FSLH &kp DOT &kp COMMA &kp H           &kp K                            &kp V  &kp D  &kp C &kp X &kp Z &trans
                            &kp LALT  &mtc LCTRL DEL  &mtc LSHFT SPACE &trans   &trans &trans &trans &trans 
                        >;
                };

                mouse_layer {
                        bindings = <
   &trans &trans &kp HOME &kp UP   &kp END   &kp PG_UP                 &msc MOVE_UP   &msc MOVE_LEFT &mmv MOVE_UP   &msc MOVE_RIGHT &trans &trans
   &trans &trans &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN                 &msc MOVE_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none  &none
   &trans &trans &trans   &trans   &trans    &trans                    &mkp MB5 &mkp MB4       &none          &none           &none  &trans
                          &kp LALT &kp LCTRL &trans    &trans   &trans &mkp MB1 &mkp MB2 &tog MOUSE    
                        >;
                };

                num_nav_layer {
                        bindings = <
   &trans &kp DOT   &kp N7 &kp N8            &kp N9          &kp C_AL_CALC                       &kp PG_UP &kp HOME  &kp UP   &kp END   &kp C_VOL_UP &trans
   &trans &kp PLUS  &kp N4 &kp N5            &kp N6          &kp STAR                            &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp C_VOL_DN &none
   &trans &kp MINUS &kp N1 &kp N2            &kp N3          &kp SLASH                           &kp WIN_L &kp WIN_R &trans   &trans    &trans       &trans
                           &lm MODS_NAV LALT &lmnt LCTRL DEL &trans        &ltc PROG N0   &trans &kp SPACE &trans    &trans
                        >;
                };

                prog_layer {
                        bindings = <
   &trans &kp EXCL  &kp AT    &kp HASH &kp DLLR  &kp PRCNT          &kp CARET &kp AMPS &kp STAR &kp PIPE  &none     &none
   &trans &kp PLUS  &kp UNDER &kp LBRC &kp RBRC  &kp STAR           &kp TILDE &kp LPAR &kp RPAR &kp COLON &kp SEMI  &kp DQT
   &trans &kp MINUS &kp EQUAL &kp BSLH &kp LBKT  &kp SLASH          &kp GRAVE &kp RBKT &kp LT   &kp GT    &kp QMARK &none
                              &kp LALT &kp LCTRL &kp ENTER &trans   &trans    &trans   &trans   &trans
                        >;
                };

                power_layer {
                        bindings = <
   &kp F1      &kp F2 &kp F3         &kp F4        &kp F5             &kp F6                       &kp F7 &kp F8      &kp F9     &kp F10    &kp F11        &kp F12             
   &bootloader &none  &bt BT_CLR     &bt BT_PRV    &bt BT_NXT         &none                        &none  &kp C_PREV  &kp C_PP   &kp C_NEXT &none          &bootloader
   &sys_reset  &none  &bt BT_CLR_ALL &out OUT_TOG  &to QT             &none                        &none  &to COLEMAK &bt BT_PRV &bt BT_NXT &bt BT_CLR_ALL &sys_reset
                                     &kp LALT      &lmt LCTRL LC(DEL) &mtc LSHFT LC(BSPC) &trans   &trans &trans &trans      &trans             
                        >;
                };

                mod_layer {
                        bindings = <
   &ctab     &kp Q &kp W &kp F  &kp P  &kp B                  &kp J  &kp L  &kp U     &kp Y   &kp SEMI &none
   &stab     &kp A &kp R &kp S  &kp T  &kp G                  &kp M  &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LSHFT &kp Z &kp X &kp C  &kp D  &kp V                  &kp K  &kp H  &kp COMMA &kp DOT &kp FSLH &trans
                         &trans &trans &trans &trans   &trans &trans &trans &trans
                        >;
                };

                mod_nav_layer {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F  &kp P  &kp B                  &trans &trans &trans &trans &trans &none
   &stab     &kp A &kp R &kp S  &kp T  &kp G                  &trans &trans &trans &trans &trans &none
   &kp LSHFT &kp Z &kp X &kp C  &kp D  &kp V                  &trans &trans &trans &trans &trans &trans
                         &trans &trans &trans &trans   &trans &trans &trans &trans
                        >;
                };
        };
};